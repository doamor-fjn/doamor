{"version":3,"sources":["../../src/providers/auth/auth.ts","../../src/pages/register-user/register-user.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/list/list.ts","../../src/config.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n\n// ÍNICIO\n// Imports que deverão ser adicionados\nimport { Observable } from 'rxjs/Observable';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { User } from '../../models/user';\n// FIM\n\n\n\n@Injectable()\nexport class AuthProvider {\n\n  // Atributo usuário que será usado para cadastro e autenticação\n  user: Observable<firebase.User>;\n\n  constructor(private firebaseAuth: AngularFireAuth) {\n    this.user = firebaseAuth.authState;\n  }\n\n  // Metodo de cadastro\n  register(user: User) {\n    return this.firebaseAuth.auth.createUserWithEmailAndPassword(user.email, user.password);\n  }\n\n  // Método de login\n  login(user: User) {\n    return this.firebaseAuth.auth.signInWithEmailAndPassword(user.email, user.password);\n  }\n\n  // Método de logout\n  logout() {\n    return this.firebaseAuth.auth.signOut();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth/auth.ts","import { Component } from '@angular/core';\n\n// Nesse import adicionamos o AlertController que será usado para apresentar a mensagem do nosso aplicativo\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\n\n// Importação do nosso modelo de usuário\nimport { User } from '../../models/user';\n\n// Importação do nosso serviço de autenticação\nimport { AuthProvider } from '../../providers/auth/auth';\n\n// Importação da página que o usuário será redirecionado após o login\nimport { LoginPage } from '../login/login';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-register-user',\n  templateUrl: 'register-user.html',\n})\nexport class RegisterUserPage {\n\n  // Definindo o nosso atributo usuário do tipo User\n  public user = {} as User;\n\n  // Aqui no contrutor vamos adicionar o AuthProvider e o AlertController\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n              private auth: AuthProvider, private alertCtrl: AlertController\n  ) { }\n\n\n  // Método para exibir as nossas mensagens de erro.\n  alert(title, message) {\n    let al = this.alertCtrl.create({\n      title: title,\n      subTitle: message,\n      buttons: ['Fechar']\n    });\n    al.present();\n  }\n\n  // Método usado para login do usuário\n  // Recebe como parametro um tipo user e tenta fazer o login\n  async login(user: User) {\n    // Valida se foi informado email e password\n    if(user.email == \"\" || user.password == \"\")\n    {\n      this.alert('Erro', 'É necessário informar o email e senha');\n    } else {\n      try {\n        // Chama o método para fazer login\n        const result = await this.auth.login(user);\n        if (result) {\n          // Se ocorrer tudo bem redireciona para a página List\n          this.navCtrl.setRoot(LoginPage);\n        }\n      } catch (e) {\n        this.alert('Erro ao logar', e.message);\n      }\n    }\n  }\n\n\n  async register(user: User) {\n\n    // Valida se foi informado email e password\n    if(user.email == \"\" || user.password == \"\" || user.username == \"\" || user.birthday == \"\")\n    {  \n      this.alert('Erro', 'É necessário informar o email e senha');\n    } else {\n      try {\n\n        // Chama o método para cadastrar usuário\n        const result = await this.auth.register(user);\n        if (result) {\n          // Se ocorrer tudo bem redireciona para a página login\n          this.navCtrl.setRoot(LoginPage);\n        }\n      } catch (e) {\n        this.alert('Erro ao cadastrar', e.message);\n      }\n    }\n  }\n\n  ionViewDidLoad() {\n    // Toda vez que um usuário acessar a página de login ele será deslogado\n    this.auth.logout();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register-user/register-user.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 195;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 195\n// module chunks = 2","var map = {\n\t\"../pages/login/login.module\": [\n\t\t777,\n\t\t1\n\t],\n\t\"../pages/register-user/register-user.module\": [\n\t\t778,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 240;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 240\n// module chunks = 2","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n// Importação da página que o usuário será redirecionado após o login\nimport { LoginPage } from '../login/login';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n  openLoginPage() {\n\tthis.navCtrl.setRoot(LoginPage);\n    //this.auth.logout();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\n// Importações para funcionamento do Firebase e da Autenticação\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\n\n\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { AuthProvider } from '../providers/auth/auth';\n\n\n// Importação da página de login\nimport { LoginPage } from '../pages/login/login';\n\n// Importação da página de cadastro\nimport { RegisterUserPage } from '../pages/register-user/register-user';\n\n// Configurações do FIREBASE\nimport { config } from '../config';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ListPage,\n    LoginPage, // Registrando a página de login\n    RegisterUserPage, // Registrando a página de cadastro\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n  \n    // Configurações do Firebase\n    AngularFireModule.initializeApp(config),\n    // Configuração do serviço de autenticação do firebase\n    AngularFireAuthModule,\n  \n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ListPage,\n    LoginPage, // Registrando a página de login\n    RegisterUserPage, // Registrando a página de cadastro\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    AuthProvider,\n    AuthProvider\n  ]\n})\nexport class AppModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n// ALTERAÇÃO 01 PASSO 8°\n// Remoção da importação desnecessária\n//import { ListPage } from '../pages/list/list';\n\n// Importação da página de login\nimport { LoginPage } from '../pages/login/login';\n// FIM DA ALTERAÇÃO 01\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n \n  // ALTERAÇÃO 02 PASSO 8°\n  //rootPage:any = TabsPage;\n  // Substituição da página principal para a pádina de login\n  // assim o usuário ao entrar no aplicativo já irá para página de login\n  rootPage:any = LoginPage;\n  // FIM DA ALTERAÇÃO 02\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  selectedItem: any;\n  icons: string[];\n  items: Array<{title: string, note: string, icon: string}>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.selectedItem = navParams.get('item');\n\n    // Let's populate this page with some filler content for funzies\n    this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\n    'american-football', 'boat', 'bluetooth', 'build'];\n\n    this.items = [];\n    for (let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }\n\n  itemTapped(event, item) {\n    // That's right, we're pushing to ourselves!\n    this.navCtrl.push(ListPage, {\n      item: item\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","export const config = {\r\n    apiKey: \"AIzaSyDRvgUlVCKrYY-nddzNs1Hm6LJ6QP0jjqU\",\r\n    authDomain: \"doamor-bf3f9.firebaseapp.com\",\r\n    databaseURL: \"https://doamor-bf3f9.firebaseio.com\",\r\n    projectId: \"doamor-bf3f9\",\r\n    storageBucket: \"doamor-bf3f9.appspot.com\",\r\n    messagingSenderId: \"590220293535\"\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.ts","import { Component } from '@angular/core';\n\n// Nesse import adicionamos o AlertController que será usado para apresentar a mensagem do nosso aplicativo\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\n\n// Importação do nosso modelo de usuário\nimport { User } from '../../models/user';\n\n// Importação do nosso serviço de autenticação\nimport { AuthProvider } from '../../providers/auth/auth';\n\n// Importação da página que o usuário será redirecionado após o login\nimport { ListPage } from '../list/list';\n\n// Importação da página que o usuário será redirecionado após o login\nimport { HomePage } from '../home/home';\n\n// Importação da página que o usuário será redirecionado para cadastrar\nimport { RegisterUserPage } from '../register-user/register-user';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  // Definindo o nosso atributo usuário do tipo User\n  public user = {} as User;\n\n  // Aqui no contrutor vamos adicionar o AuthProvider e o AlertController\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n              private auth: AuthProvider, private alertCtrl: AlertController\n  ) { }\n\n\n  // Método para exibir as nossas mensagens de erro.\n  alert(title, message) {\n    let al = this.alertCtrl.create({\n      title: title,\n      subTitle: message,\n      buttons: ['Fechar']\n    });\n    al.present();\n  }\n\n  // Método usado para login do usuário\n  // Recebe como parametro um tipo user e tenta fazer o login\n  async login(user: User) {\n    // Valida se foi informado email e password\n    if(user.username == \"\" || user.password == \"\")\n    {\n      this.alert('Erro', 'É necessário informar o email e senha');\n    } else {\n      try {\n        // Chama o método para fazer login\n        const result = await this.auth.login(user);\n        if (result) {\n          // Se ocorrer tudo bem redireciona para a página List\n          this.navCtrl.setRoot(HomePage);\n        }\n      } catch (e) {\n        this.alert('Erro ao logar', e.message);\n      }\n    }\n  }\n\n\n  async register(user: User) {\n\n    // Valida se foi informado email e password\n    if(user.email == \"\" || user.password == \"\")\n    {  \n      this.alert('Erro', 'É necessário informar o email e senha');\n    } else {\n      try {\n\n        // Chama o método para cadastrar usuário\n        const result = await this.auth.register(user);\n        if (result) {\n          // Se ocorrer tudo bem redireciona para a página List\n          this.navCtrl.setRoot(HomePage);\n        }\n      } catch (e) {\n        this.alert('Erro ao cadastrar', e.message);\n      }\n    }\n  }\n\n  ionViewDidLoad() {\n    // Toda vez que um usuário acessar a página de login ele será deslogado\n    this.auth.logout();\n  }\n\n\n  openRegisterUserPage() {\n    this.navCtrl.push(RegisterUserPage);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}